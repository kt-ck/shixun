import {
  Box,
  Flex,
  UnstyledButton,
  Image,
  Text,
  SimpleGrid,
  createStyles,
  Group,
  Title,
  Stack,
  Button,
  Drawer,
  Input,
} from "@mantine/core";
import { gray_layout } from "@/type/const";
import { useState, useEffect } from "react";
import Head from "next/head";
import Card from "@/components/profile/Card";
import { backgroundColor } from "@/type/const";
import { useAppSelector } from "@/store/hooks";
import { selectUserInfo } from "@/features/roleFeature/roleFeature";
import {
  addAddress,
  finish,
  getAddress,
  listOrder,
  removeAddress,
  userInfo,
} from "@/fetchMethod/account";
import React from "react";
import { useDisclosure } from "@mantine/hooks";
import AddressCard from "@/components/order/AddressCard";
import { OrderType, SimpleProduct } from "@/type/type";
import { getStatus } from "@/type/const";
import { useRouter } from "next/router";
const title = ["Overview", "My Orders"];
const useStyles = createStyles((theme) => ({}));
function Acount() {
  const [activeIndex, setActiveIndex] = useState(0);
  const info = useAppSelector(selectUserInfo);
  const [phone, setPhone] = useState("");
  const [address, setAddress] = useState([]);
  const { theme } = useStyles();
  const [opened, { open, close }] = useDisclosure(false);
  const [ads, setAds] = useState("");
  const [name, setName] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  const [orders, setOrders] = useState<OrderType[]>([]);
  const router = useRouter();
  useEffect(() => {
    userInfo().then((res) => setPhone(res.phoneNumber));
    getAddress(1).then((res) => setAddress(res));
    listOrder(1).then((res) => {
      setOrders(res);
    });
  }, []);

  return (
    <>
      <Head>
        <title>My Profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Drawer
        opened={opened}
        onClose={close}
        title="Add Address"
        position="right"
      >
        <Box
          sx={{
            display: "flex",
            justifyContent: "center",
            padding: "3rem",
            flexDirection: "column",
            height: "70vh",
            gap: "3rem",
          }}
        >
          <Input
            placeholder="Your Address"
            value={ads}
            onChange={(e) => setAds(e.target.value)}
          />
          <Input
            placeholder="Your Name"
            value={name}
            onChange={(e) => setName(e.target.value)}
          />
          <Input
            placeholder="Your phone Number"
            value={phoneNumber}
            onChange={(e) => setPhoneNumber(e.target.value)}
          />
          <Button
            onClick={() => {
              addAddress(name, ads, phoneNumber).then(() => {
                close();
                getAddress(1).then((res) => setAddress(res));
              });
            }}
            color="dark"
          >
            Add
          </Button>
        </Box>
      </Drawer>

      <Box
        sx={{
          position: "relative",
          backgroundColor:
            theme.colorScheme === "light" ? backgroundColor : "black",
        }}
      >
        <Flex
          justify={"flex-end"}
          sx={{
            position: "sticky",
            top: 0,
            zIndex: 10,
            backgroundColor: theme.colorScheme === "light" ? "white" : "black",
          }}
        >
          {title.map((item, index) => (
            <UnstyledButton
              key={item}
              sx={{
                padding: "1.5rem 2rem",
                borderLeft: `1px solid ${gray_layout}`,
                borderBottom:
                  activeIndex === index ? "0.3rem solid black" : "none",
              }}
              onClick={() => setActiveIndex(index)}
            >
              {item}
            </UnstyledButton>
          ))}
        </Flex>
        <Box sx={{ position: "relative" }}>
          <Image
            src={"/profile.webp"}
            width={"100%"}
            height={"20rem"}
            fit={"cover"}
            alt=""
          />
          <Box
            sx={{
              position: "absolute",
              bottom: "-3rem",
              left: "calc(50% - 3rem)",
            }}
          >
            <Box
              sx={{
                borderRadius: "50%",
                width: "6rem",
                height: "6rem",
                backgroundColor:
                  theme.colorScheme === "light" ? "white" : "black",
                border: `1px solid ${gray_layout}`,
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
              }}
            >
              <Title order={2}>{info.name ? info.name[0] : "G"}</Title>
            </Box>
          </Box>
        </Box>
        <Box sx={{ textAlign: "center", marginTop: "5rem" }}>
          <Text fw={600} fz="lg">
            {info.name ? info.name : "Guest"}
          </Text>
        </Box>
        <SimpleGrid
          cols={activeIndex === 0 ? 2 : 1}
          sx={{ margin: "3rem auto", width: "80%" }}
          spacing="lg"
        >
          {activeIndex === 0 && (
            <Card title="MY PROFILE">
              <Stack>
                <Group>
                  <Title order={4} fw={500}>
                    Phone Number
                  </Title>
                  <Text sx={{ marginLeft: "auto" }}>{phone}</Text>
                </Group>
                <Stack>
                  <Group>
                    <Title order={4} fw={500}>
                      Address
                    </Title>
                    <Button
                      sx={{ marginLeft: "auto" }}
                      variant={"default"}
                      onClick={open}
                    >
                      Add
                    </Button>
                  </Group>

                  <Stack>
                    {address.map(
                      (item: {
                        address: string;
                        phoneNumber: string;
                        recAddressId: string;
                        recName: string;
                      }) => (
                        <Group key={item.recAddressId}>
                          <Box sx={{ width: "80%" }}>
                            <AddressCard
                              address={item.address}
                              phoneNumber={item.phoneNumber}
                              recName={item.recName}
                            />
                          </Box>
                          <Button
                            sx={{ marginLeft: "auto" }}
                            variant={"default"}
                            onClick={() => {
                              removeAddress(item.recAddressId).then(() => {
                                getAddress(1).then((res) => setAddress(res));
                              });
                            }}
                          >
                            Remove
                          </Button>
                        </Group>
                      )
                    )}
                  </Stack>
                </Stack>
              </Stack>
            </Card>
          )}
          <Card title="MY ORDERS">
            <>
              {orders.length === 0 ? (
                <Box>No Orders</Box>
              ) : (
                <>
                  {orders
                    .slice(0, activeIndex === 0 ? 1 : orders.length)
                    .map((order) => {
                      console.log(order);
                      return (
                        <Stack
                          sx={{
                            padding: "2rem",
                            border: `1px solid ${gray_layout}`,
                            marginBottom: "1rem",
                          }}
                          key={order.orderId}
                        >
                          <Group>
                            <Text fz={"sm"} fw={300} c={"dimmed"}>
                              {order.orderId}
                            </Text>
                            <Text
                              sx={{ marginLeft: "auto" }}
                              fz={"sm"}
                              fw={300}
                            >
                              {new Date(order.createTime).toString()}
                            </Text>
                          </Group>
                          {order.deliveryWay === 0 ? (
                            <AddressCard
                              address={order.recAddress.address}
                              recName={order.recAddress.recName}
                              phoneNumber={order.recAddress.phoneNumber}
                            />
                          ) : (
                            <Stack
                              sx={{
                                width: "100%",
                                border: `1px solid ${gray_layout}`,
                                padding: "2rem",
                              }}
                            >
                              <Group>
                                <Title order={5} fw={500}>
                                  Address
                                </Title>
                                <Text sx={{ marginLeft: "auto" }}>
                                  {order.storeInfo.address}
                                </Text>
                              </Group>
                              <Group>
                                <Title order={5} fw={500}>
                                  Store ID
                                </Title>
                                <Text sx={{ marginLeft: "auto" }}>
                                  {order.storeInfo.storeId}
                                </Text>
                              </Group>
                              <Group>
                                <Title order={5} fw={500}>
                                  Store Name
                                </Title>
                                <Text sx={{ marginLeft: "auto" }}>
                                  {order.storeInfo.storeName}
                                </Text>
                              </Group>
                              <Group>
                                <Title order={5} fw={500}>
                                  Phone Number
                                </Title>
                                <Text sx={{ marginLeft: "auto" }}>
                                  {order.storeInfo.phoneNumber}
                                </Text>
                              </Group>
                              <Group>
                                <Title order={5} fw={500}>
                                  Status
                                </Title>
                                <Text sx={{ marginLeft: "auto" }}>
                                  {order.storeInfo.status}
                                </Text>
                              </Group>
                            </Stack>
                          )}

                          <Group>
                            <Title order={4} fw={600}>
                              Delivery Way
                            </Title>
                            <Text sx={{ marginLeft: "auto" }}>
                              {order.deliveryWay === 0
                                ? "Express Delivery"
                                : "In-store Pickup"}
                            </Text>
                          </Group>
                          <Group>
                            <Title order={4} fw={600}>
                              Status
                            </Title>
                            <Text sx={{ marginLeft: "auto" }}>
                              {getStatus(order.status)}
                            </Text>
                          </Group>
                          <Group>
                            <Title order={4} fw={600}>
                              Quantity
                            </Title>
                            <Text sx={{ marginLeft: "auto" }}>
                              {order.totalCount}
                            </Text>
                          </Group>
                          <Group>
                            <Title order={4} fw={600}>
                              Total
                            </Title>
                            <Text sx={{ marginLeft: "auto" }}>
                              {order.totalPrice}
                            </Text>
                          </Group>
                          <Stack sx={{ width: "100%" }}>
                            {order.orderItemList.map((item) => (
                              <Group
                                sx={{
                                  padding: "1rem",
                                  borderTop: `1px solid ${gray_layout}`,
                                }}
                                key={item.name}
                              >
                                <Box sx={{ width: "10rem", height: "10rem" }}>
                                  <Image
                                    src={process.env.BaseUrl + item.image}
                                    alt={""}
                                    fit={"contain"}
                                  />
                                </Box>
                                <Box sx={{ marginLeft: "auto" }}>
                                  <Group>
                                    <Title order={3} fw={400}>
                                      {item.name}
                                    </Title>
                                    <Title
                                      order={3}
                                      fw={500}
                                      sx={{ marginLeft: "auto" }}
                                    >
                                      ${item.price}
                                    </Title>
                                  </Group>
                                  <Group>
                                    <Text fz={"md"} fw={600}>
                                      Color
                                    </Text>
                                    <Text sx={{ marginLeft: "auto" }}>
                                      <Box
                                        sx={{
                                          backgroundColor: item.color,
                                          borderRadius: "50%",
                                          border: `1px solid ${gray_layout}`,
                                          width: "1rem",
                                          height: "1rem",
                                        }}
                                      ></Box>
                                    </Text>
                                  </Group>
                                  <Group>
                                    <Text fz={"md"} fw={600}>
                                      Price
                                    </Text>
                                    <Text sx={{ marginLeft: "auto" }}>
                                      {item.price}
                                    </Text>
                                  </Group>
                                </Box>
                              </Group>
                            ))}
                          </Stack>
                          <Button
                            color={"dark"}
                            variant={"filled"}
                            disabled={order.status === 4}
                            onClick={() => {
                              finish(order.orderId).then(() => {
                                listOrder(1).then((res) => {
                                  setOrders(res);
                                });
                              });
                            }}
                          >
                            {order.status !== 4 ? "Confirm" : "Confirmed"}
                          </Button>
                        </Stack>
                      );
                    })}
                </>
              )}
              {activeIndex === 0 && (
                <Text
                  sx={{
                    margin: "1rem",
                    cursor: "pointer",
                    textDecoration: "underline",
                  }}
                  onClick={() => setActiveIndex(1)}
                >
                  Show more orders
                </Text>
              )}
            </>
          </Card>
        </SimpleGrid>
      </Box>
    </>
  );
}

export default Acount;
